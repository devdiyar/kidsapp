services:
  # Database service for development
  db:
    image: postgres:15-alpine
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kidsapp -d kidsapp"]
      interval: 30s
      timeout: 10s
      retries: 3

  stadtserver:
    build:
      context: ./stadtserver
      dockerfile: Dockerfile
    ports:
      - "8082:8080"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    env_file:
      - .env
    depends_on:
      stadtserver:
        condition: service_healthy
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  mobile:
    build:
      context: ./mobile
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    env_file:
      - .env
    depends_on:
      - backend
    stdin_open: true
    tty: true

volumes:
  postgres_data:

networks:
  default:
    driver: bridge